version: 2.1

orbs:
  orbtools: gofunky/orbtools@0.1.1
  envorb: gofunky/envorb@0.3.2
  docker: gofunky/docker@0.0.5

master_filter: &master_filter
  filters:
    branches:
      only:
        - master

tag_filter: &tag_filter
  filters:
    tags:
      only: /.*/
    branches:
      ignore: /.*/

pr_filter: &pr_filter
  filters:
    branches:
      ignore:
        - master

set_compose_version: &set_compose_version
  attach: true
  alpine_version: "3.8"
  variable: COMPOSE_VERSION
  prepare:
    - run:
        name: Install docker-compose
        command: |
          echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
          echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
          echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
          apk upgrade --no-cache --available
          apk add --no-cache docker-compose
  cmd: docker-compose version

set_docker_version: &set_docker_version
  alpine_version: "3.8"
  variable: DOCKER_VERSION
  repository: "docker/docker-ce"

docker_job: &docker_job
  attach: true
  compose: ./test/docker-compose.test.yml
  base_tag: funkydocker
  add_labels: true
  docker_version: 18.09.0
  context: docker-hub
  args: "VERSION=${DOCKER_VERSION},DOCKER=${DOCKER_VERSION}"

workflows:
  publish:
    jobs:
      - envorb/cmd_version:
          name: set_compose_version
          <<: *set_compose_version

      - envorb/github:
          name: set_docker_version
          <<: *set_docker_version

      - docker/build_test_push:
          name: build_latest
          <<: [*master_filter, *docker_job]
          tags: "gofunky/docker:${DOCKER_VERSION},gofunky/docker:${DOCKER_VERSION}-compose${COMPOSE_VERSION},gofunky/docker:latest"
          login: docker login -u $DOCKER_USR -p $DOCKER_PWD
          cache: true
          requires:
            - set_docker_version
            - set_compose_version
      - docker/build_test_push:
          name: build_envload
          <<: [*master_filter, *docker_job]
          tags: "gofunky/docker:${DOCKER_VERSION}-envload,gofunky/docker:${DOCKER_VERSION}-compose${COMPOSE_VERSION}-envload,gofunky/docker:envload"
          login: docker login -u $DOCKER_USR -p $DOCKER_PWD
          cache: true
          add_labels: false
          path: "./envorb"
          compose: "./envorb/test/docker-compose.test.yml"
          base_tag: dockertest
          args: "BASE=gofunky/docker:${DOCKER_VERSION}-compose${COMPOSE_VERSION}"
          requires:
            - set_docker_version
            - set_compose_version
            - build_latest
      - docker/build_test:
          name: test_latest
          <<: [*pr_filter, *docker_job]
          tags: "gofunky/docker:${DOCKER_VERSION},gofunky/docker:${DOCKER_VERSION}-compose${COMPOSE_VERSION},gofunky/docker:latest"
          requires:
            - set_docker_version
            - set_compose_version
      - docker/build_test:
          name: test_envload
          <<: [*pr_filter, *docker_job]
          tags: "gofunky/docker:${DOCKER_VERSION}-envload,gofunky/docker:${DOCKER_VERSION}-compose${COMPOSE_VERSION}-envload,gofunky/docker:envload"
          add_labels: false
          path: "./envorb"
          compose: "./envorb/test/docker-compose.test.yml"
          base_tag: dockertest
          args: "BASE=gofunky/docker:${DOCKER_VERSION}-compose${COMPOSE_VERSION}"
          requires:
            - set_docker_version
            - set_compose_version
            - test_latest

      - orbtools/check:
          name: check_pull_request
          <<: *pr_filter

      - orbtools/env-pack-publish:
          name: publish_latest
          context: orb-tools
          version: "dev:${CIRCLE_BRANCH}"
          <<: *master_filter

      - envorb/git_tag:
          name: release_tag
          alpine_version: "3.8"
          variable: ORB_PUBLISHING_VERSION
          <<: *tag_filter

      - orbtools/env-pack-publish:
          name: publish_release
          context: orb-tools
          <<: *tag_filter
          requires: [release_tag]

  #publish_release:
  #  jobs:
  #    - envorb/git_tag:
  #        name: release_tag
  #        <<: *tag_filter
  #        alpine_version: "3.8"
  #        variable: TAG_VERSION
  #    - dockerorb/build_test_push:
  #        name: build_release
  #        <<: *readmyhub_job
  #        <<: *tag_filter
  #        attach: true
  #        use_args: true
  #        args: "VERSION=${TAG_VERSION}"
  #        tags: "gofunky/readmyhub:stable,gofunky/readmyhub:${TAG_VERSION}"
  #        requires:
  #          - release_tag
  #    - dockerorb/build_test_push:
  #        name: build_git_release
  #        <<: *readmyhub_job
  #        <<: *tag_filter
  #        attach: true
  #        file: "Dockerfile.git"
  #        use_args: true
  #        args: "BASE_VERSION=${TAG_VERSION}"
  #        tags: "gofunky/readmyhub:stable-git,gofunky/readmyhub:${TAG_VERSION}-git"
  #        requires:
  #          - build_release
  #          - release_tag
